eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 2 
    preferIpAddress: true 
  server:
    peer-node-read-timeout-ms: 10000
    enableSelfPreservation: false  
    waitTimeInMsWhenSyncEmpty: 0 
    peerNodeTotalConnections: 100 
    peerNodeTotalConnectionsPerHost: 500  
  client:
# Default value is true
#    registerWithEureka: true
#    fetchRegistry: true 
    healthcheck: 
      enabled: true       

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    shutdown: 
      enabled: true
    restart: 
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
        
#Graceful shutdown
server:
  shutdown: graceful
spring: 
  main:
    allow-circular-references: true 
  lifecycle: 
    timeout-per-shutdown-phase: 30s
        
logging:
  file: 
    name: logs/eureka-server.log 
  level: 
    com: 
      netflix: 
        eureka: error
        discovery: error
    ch: 
      qos: 
        logback: 
          classic: 
            Level: debug
    web: DEBUG
  logback: 
    rollingpolicy: 
      max-history: 10
      max-file-size: 100MB
      total-size-cap: 1GB

# Spring API docs
springdoc:
  api-docs:
    path: /api-docs